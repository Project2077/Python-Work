# 由类似对象组成的字典

# 字典存储的是一个对象（游戏中的一个外星人）的多种信息，但
# 你也可以使用字典来存储众多对象的同一种信息。例如，假设你要调查很多人，询
# 问他们最喜欢的编程语言，可使用一个字典来存储这种简单调查的结果

favorite_languages = {
	'jen':'python',
	'sarah':'c',
	'edward':'ruby',
	'phil':'python',
	} # 一般多行字典的格式

# 我们将一个较大的字典放在了多行中。每个键都是一个被调查者的名
# 字，而每个值都是被调查者喜欢的语言。确定需要使用多行来定义字典时，要在输
# 入左花括号后按回车键。在下一行缩进四个空格，指定第一个键值对，并在它后面
# 加上一个逗号。此后再按回车键时，文本编辑器将自动缩进后续键值对，且缩进量
# 与第一个键值对相同。

# 定义好字典后，在最后一个键值对的下一行添加一个右花括号，并缩进四个空格，
# 使其与字典中的键对齐。一种不错的做法是，在最后一个键值对后面也加上逗号，
# 为以后在下一行添加键值对做好准备。

# 注意 　对于较长的列表和字典，大多数编辑器提供了以类似方式设置格式的功
# 能。对于较长的字典，还有其他一些可行的格式设置方式，因此在你的编辑器
# 或其他源代码中，你可能会看到稍微不同的格式设置方式。


language = favorite_languages['sarah'].title()
print(f"Sarah's favorite language is {language}.")
# 获取Sarah喜欢的语言，并将其赋给变量language
# 创建这个新变量让函数调用print() 变得整洁得多。



for name,language in favorite_languages.items():
	print(f"{name.title()}'s favorite language is {language.title()}.")